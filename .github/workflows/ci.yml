name: CI

on:
  push:
    branches: [main, migration]
  pull_request:
    branches: [main, migration]
  release:
    types: [created]

env:
  NODE_VERSION: 18

jobs:
  format-and-lint:
    name: Format and Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install yarn dependencies
        run: yarn install
      - name: Format
        run: yarn prettier
      - name: Lint
        run: yarn lint

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install yarn dependencies
        run: yarn install
      - name: Build
        run: yarn build

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install yarn dependencies
        run: yarn install
      - name: Run tests
        run: yarn coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: sparcs-kaist/otlplus-web

  release-and-upload:
    name: Build, Zip, and Upload Release Asset
    runs-on: ubuntu-latest
    needs: [format-and-lint] # Optional: make it depend on other jobs

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install yarn dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Zip build folder
        run: zip -r build-archive.zip build # Assuming 'build' is your output folder
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build-archive.zip
          asset_name: build-archive.zip
          asset_content_type: application/zip
